  PID TTY          TIME CMD
14717 pts/19   00:00:00 bash
14743 pts/19   00:00:00 myshell.o
14744 pts/19   00:00:00 ps
  PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14745 pts/19   R+     0:00      \_ ps f
total 147
-rwxrwxrwx 1 hans hans  1031 Oct  8  2013 loopever.c
-rwxrwxrwx 1 hans hans   215 Oct  8  2013 inProc.c
-rwxrwxrwx 1 hans hans   217 Oct  9  2013 outProc.c
-rwxrwxrwx 1 hans hans   380 Sep 12 16:19 nested.c
-rwxrwxrwx 1 hans hans 17013 Sep 21 17:47 PASS2.txt
-rwxrwxrwx 1 hans hans 23748 Sep 21 22:49 oracle
-rwxrwxrwx 1 hans hans   388 Sep 21 22:55 Makefile
-rwxrwxrwx 1 hans hans 16344 Sep 24 14:19 Test Cases.docx
-rwxrwxrwx 1 hans hans 19256 Sep 27 11:29 myshell.o
-rwxrwxrwx 1 hans hans   133 Sep 27 11:37 cases.txt
-rwxrwxrwx 1 hans hans  8976 Sep 27 11:37 loopf
-rwxrwxrwx 1 hans hans  8976 Sep 27 11:37 forever
-rwxrwxrwx 1 hans hans  8720 Sep 27 11:37 inproc
-rwxrwxrwx 1 hans hans  8768 Sep 27 11:37 outproc
-rwxrwxrwx 1 hans hans  8808 Sep 27 11:37 nested
-rwxrwxrwx 1 hans hans   268 Sep 27 11:40 gg.txt
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hans     14717  0.3  0.0  30128  5968 pts/19   Ss   11:40   0:00 bash XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0 XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg SESSION=ubuntu LANG=en_US.UTF-8 DISPLAY=:0 SHLVL=0 LOGNAME=hans XDG_VTNR=7 MANDATORY_PATH=/usr/share/gconf/ubuntu.mandatory.path GNOME_KEYRING_PID= UPSTART_INSTANCE= COMPIZ_CONFIG_PROFILE=ubuntu XAUTHORITY=/home/hans/.Xauthority QT_LINUX_ACCESSIBILITY_ALWAYS_ON=1 QT_QPA_PLATFORMTHEME=appmenu-qt5 XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/hans LANGUAGE=en_US XDG_SESSION_ID=c2 GTK2_MODULES=overlay-scrollbar DESKTOP_SESSION=ubuntu GOPATH=/home/hans/code/go XDG_SESSION_DESKTOP=ubuntu GDMSESSION=ubuntu GNOME_KEYRING_CONTROL= DEFAULTS_PATH=/usr/share/gconf/ubuntu.default.path GNOME_DESKTOP_SESSION_ID=this-is-deprecated UPSTART_EVENTS=xsession started XDG_RUNTIME_DIR=/run/user/1000 VTE_VERSION=4205 GTK_IM_MODULE=fcitx PWD=/home/hans DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-4QMMqsbjf9 COMPIZ_BIN_PATH=/usr/bin/ CLUTTER_IM_MODULE=xim IM_CONFIG_PHASE=1 SESSIONTYPE=gnome-session XDG_DATA_DIRS=/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop JOB=unity-settings-daemon QT4_IM_MODULE=fcitx UPSTART_JOB=unity7 QT_ACCESSIBILITY=1 GDM_LANG=en_US XDG_SESSION_TYPE=x11 QT_IM_MODULE=fcitx UPSTART_SESSION=unix:abstract=/com/ubuntu/upstart-session/1000/1369 TERM=xterm-256color SHELL=/bin/bash WINDOWID=100663306 XDG_CURRENT_DESKTOP=Unity GTK_MODULES=gail:atk-bridge:unity-gtk-module SSH_AUTH_SOCK=/run/user/1000/keyring/ssh PATH=/home/hans/bin:/home/hans/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin XDG_SEAT=seat0 XMODIFIERS=@im=fcitx HOME=/home/hans XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0 GPG_AGENT_INFO=/home/hans/.gnupg/S.gpg-agent:0:1 USER=hans INSTANCE=
hans     14743  0.0  0.0   4368   740 pts/19   S+   11:40   0:00  \_ ./myshell.o XDG_VTNR=7 XDG_SESSION_ID=c2 CLUTTER_IM_MODULE=xim XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/hans SESSION=ubuntu GPG_AGENT_INFO=/home/hans/.gnupg/S.gpg-agent:0:1 SHELL=/bin/bash TERM=xterm-256color VTE_VERSION=4205 QT_LINUX_ACCESSIBILITY_ALWAYS_ON=1 WINDOWID=100663306 UPSTART_SESSION=unix:abstract=/com/ubuntu/upstart-session/1000/1369 GNOME_KEYRING_CONTROL= GTK_MODULES=gail:atk-bridge:unity-gtk-module USER=hans LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: QT_ACCESSIBILITY=1 XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0 XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0 SSH_AUTH_SOCK=/run/user/1000/keyring/ssh DEFAULTS_PATH=/usr/share/gconf/ubuntu.default.path XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg PATH=/home/hans/software/anaconda3/bin:/home/hans/software/anaconda2_2/bin:/home/hans/bin:/home/hans/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin DESKTOP_SESSION=ubuntu QT_IM_MODULE=fcitx QT_QPA_PLATFORMTHEME=appmenu-qt5 XDG_SESSION_TYPE=x11 JOB=unity-settings-daemon PWD=/home/hans/HKU/COMP3230/assignments/assignment2/test XMODIFIERS=@im=fcitx GNOME_KEYRING_PID= LANG=en_US.UTF-8 GDM_LANG=en_US MANDATORY_PATH=/usr/share/gconf/ubuntu.mandatory.path IM_CONFIG_PHASE=1 COMPIZ_CONFIG_PROFILE=ubuntu GDMSESSION=ubuntu SESSIONTYPE=gnome-session GTK2_MODULES=overlay-scrollbar HOME=/home/hans XDG_SEAT=seat0 SHLVL=1 LANGUAGE=en_US GNOME_DESKTOP_SESSION_ID=this-is-deprecated UPSTART_INSTANCE= UPSTART_EVENTS=xsession started XDG_SESSION_DESKTOP=ubuntu LOGNAME=hans COMPIZ_BIN_PATH=/usr/bin/ QT4_IM_MODULE=fcitx XDG_DATA_DIRS=/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-4QMMqsbjf9 LESSOPEN=| /usr/bin/lesspipe %s GOPATH=/home/hans/code/go INSTANCE= UPSTART_JOB=unity7 XDG_RUNTIME_DIR=/run/user/1000 DISPLAY=:0 XDG_CURRENT_DESKTOP=Unity GTK_IM_MODULE=fcitx LESSCLOSE=/usr/bin/lesspipe %s %s XAUTHORITY=/home/hans/.Xauthority OLDPWD=/home/hans/HKU/COMP3230/assignments/assignment2 _=./myshell.o
hans     14747  0.0  0.0  44432  3332 pts/19   R+   11:40   0:00      \_ ps -e -a -f -u XDG_VTNR=7 XDG_SESSION_ID=c2 CLUTTER_IM_MODULE=xim XDG_GREETER_DATA_DIR=/var/lib/lightdm-data/hans SESSION=ubuntu GPG_AGENT_INFO=/home/hans/.gnupg/S.gpg-agent:0:1 SHELL=/bin/bash TERM=xterm-256color VTE_VERSION=4205 QT_LINUX_ACCESSIBILITY_ALWAYS_ON=1 WINDOWID=100663306 UPSTART_SESSION=unix:abstract=/com/ubuntu/upstart-session/1000/1369 GNOME_KEYRING_CONTROL= GTK_MODULES=gail:atk-bridge:unity-gtk-module USER=hans LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: QT_ACCESSIBILITY=1 XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0 XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0 SSH_AUTH_SOCK=/run/user/1000/keyring/ssh DEFAULTS_PATH=/usr/share/gconf/ubuntu.default.path XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg PATH=/home/hans/software/anaconda3/bin:/home/hans/software/anaconda2_2/bin:/home/hans/bin:/home/hans/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin DESKTOP_SESSION=ubuntu QT_IM_MODULE=fcitx QT_QPA_PLATFORMTHEME=appmenu-qt5 XDG_SESSION_TYPE=x11 JOB=unity-settings-daemon PWD=/home/hans/HKU/COMP3230/assignments/assignment2/test XMODIFIERS=@im=fcitx GNOME_KEYRING_PID= LANG=en_US.UTF-8 GDM_LANG=en_US MANDATORY_PATH=/usr/share/gconf/ubuntu.mandatory.path IM_CONFIG_PHASE=1 COMPIZ_CONFIG_PROFILE=ubuntu GDMSESSION=ubuntu SESSIONTYPE=gnome-session GTK2_MODULES=overlay-scrollbar HOME=/home/hans XDG_SEAT=seat0 SHLVL=1 LANGUAGE=en_US GNOME_DESKTOP_SESSION_ID=this-is-deprecated UPSTART_INSTANCE= UPSTART_EVENTS=xsession started XDG_SESSION_DESKTOP=ubuntu LOGNAME=hans COMPIZ_BIN_PATH=/usr/bin/ QT4_IM_MODULE=fcitx XDG_DATA_DIRS=/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-4QMMqsbjf9 LESSOPEN=| /usr/bin/lesspipe %s GOPATH=/home/hans/code/go INSTANCE= UPSTART_JOB=unity7 XDG_RUNTIME_DIR=/run/user/1000 DISPLAY=:0 XDG_CURRENT_DESKTOP=Unity GTK_IM_MODULE=fcitx LESSCLOSE=/usr/bin/lesspipe %s %s XAUTHORITY=/home/hans/.Xauthority OLDPWD=/home/hans/HKU/COMP3230/assignments/assignment2 _=./myshell.o
root      1072  3.6  2.5 531848 200760 tty7    Ss+  10:18   3:00 /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/run/lightdm/root/:0 -nolisten tcp vt7 -novtswitch
root      1089  0.0  0.0  23008  1852 tty1     Ss+  10:18   0:00 /sbin/agetty --noclear tty1 linux
  PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14748 pts/19   R+     0:00      \_ /bin/ps f
total 167
drwxrwxrwx 1 hans hans  4096 Sep 27 11:40 .
drwxrwxrwx 1 hans hans  4096 Sep 27 11:39 ..
-rwxrwxrwx 1 hans hans   133 Sep 27 11:37 cases.txt
-rwxrwxrwx 1 hans hans  8976 Sep 27 11:37 forever
-rwxrwxrwx 1 hans hans 10564 Sep 27 11:40 gg.txt
-rwxrwxrwx 1 hans hans  8720 Sep 27 11:37 inproc
-rwxrwxrwx 1 hans hans   215 Oct  8  2013 inProc.c
-rwxrwxrwx 1 hans hans    69 Sep 27 11:30 .~lock.Test Cases.docx#
-rwxrwxrwx 1 hans hans  1031 Oct  8  2013 loopever.c
-rwxrwxrwx 1 hans hans  8976 Sep 27 11:37 loopf
-rwxrwxrwx 1 hans hans   388 Sep 21 22:55 Makefile
-rwxrwxrwx 1 hans hans 19256 Sep 27 11:29 myshell.o
-rwxrwxrwx 1 hans hans  8808 Sep 27 11:37 nested
-rwxrwxrwx 1 hans hans   380 Sep 12 16:19 nested.c
-rwxrwxrwx 1 hans hans 23748 Sep 21 22:49 oracle
-rwxrwxrwx 1 hans hans  8768 Sep 27 11:37 outproc
-rwxrwxrwx 1 hans hans   217 Oct  9  2013 outProc.c
-rwxrwxrwx 1 hans hans 17013 Sep 21 17:47 PASS2.txt
-rwxrwxrwx 1 hans hans 16344 Sep 24 14:19 Test Cases.docx
## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $   PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14751 pts/19   R+     0:00      \_ ps f
PIPE(2)                    Linux Programmer's Manual                   PIPE(2)

NAME
       pipe, pipe2 - create pipe

SYNOPSIS
       #include <unistd.h>

       int pipe(int pipefd[2]);

       #define _GNU_SOURCE             /* See feature_test_macros(7) */
       #include <fcntl.h>              /* Obtain O_* constant definitions */
       #include <unistd.h>

       int pipe2(int pipefd[2], int flags);

DESCRIPTION
       pipe()  creates  a pipe, a unidirectional data channel that can be used
       for interprocess communication.  The array pipefd is used to return two
       file  descriptors  referring to the ends of the pipe.  pipefd[0] refers
       to the read end of the pipe.  pipefd[1] refers to the write end of  the
       pipe.   Data  written  to  the write end of the pipe is buffered by the
       kernel until it is read from the read end of  the  pipe.   For  further
       details, see pipe(7).

       If  flags is 0, then pipe2() is the same as pipe().  The following val‐
       ues can be bitwise ORed in flags to obtain different behavior:

       O_CLOEXEC
              Set the close-on-exec (FD_CLOEXEC) flag  on  the  two  new  file
              descriptors.   See  the  description of the same flag in open(2)
              for reasons why this may be useful.

       O_DIRECT (since Linux 3.4)
              Create a pipe that performs I/O in "packet" mode.  Each write(2)
              to  the  pipe  is  dealt with as a separate packet, and read(2)s
              from the pipe will read one packet at a time.  Note the  follow‐
              ing points:

              *  Writes  of  greater than PIPE_BUF bytes (see pipe(7)) will be
                 split  into  multiple  packets.   The  constant  PIPE_BUF  is
                 defined in <limits.h>.

              *  If a read(2) specifies a buffer size that is smaller than the
                 next packet, then the requested number of bytes are read, and
                 the  excess  bytes in the packet are discarded.  Specifying a
                 buffer size of  PIPE_BUF  will  be  sufficient  to  read  the
                 largest possible packets (see the previous point).

              *  Zero-length packets are not supported.  (A read(2) that spec‐
                 ifies a buffer size of zero is a no-op, and returns 0.)

              Older kernels that do not support this flag will  indicate  this
              via an EINVAL error.

       O_NONBLOCK
              Set  the  O_NONBLOCK  file  status flag on the two new open file
              descriptions.  Using this flag saves extra calls to fcntl(2)  to
              achieve the same result.

RETURN VALUE
       On  success,  zero is returned.  On error, -1 is returned, and errno is
       set appropriately.

ERRORS
       EFAULT pipefd is not valid.

       EINVAL (pipe2()) Invalid value in flags.

       EMFILE The per-process limit on the number of open file descriptors has
              been reached.

       ENFILE The system-wide limit on the total number of open files has been
              reached.

VERSIONS
       pipe2() was added to Linux in version 2.6.27; glibc support  is  avail‐
       able starting with version 2.9.

CONFORMING TO
       pipe(): POSIX.1-2001, POSIX.1-2008.

       pipe2() is Linux-specific.

EXAMPLE
       The  following  program  creates  a pipe, and then fork(2)s to create a
       child process; the child inherits a duplicate set of  file  descriptors
       that  refer  to  the same pipe.  After the fork(2), each process closes
       the descriptors that it doesn't need for the pipe (see  pipe(7)).   The
       parent  then  writes the string contained in the program's command-line
       argument to the pipe, and the child reads this string a byte at a  time
       from the pipe and echoes it on standard output.

   Program source
       #include <sys/types.h>
       #include <sys/wait.h>
       #include <stdio.h>
       #include <stdlib.h>
       #include <unistd.h>
       #include <string.h>

       int
       main(int argc, char *argv[])
       {
           int pipefd[2];
           pid_t cpid;
           char buf;

           if (argc != 2) {
               fprintf(stderr, "Usage: %s <string>\n", argv[0]);
               exit(EXIT_FAILURE);
           }

           if (pipe(pipefd) == -1) {
               perror("pipe");
               exit(EXIT_FAILURE);
           }

           cpid = fork();
           if (cpid == -1) {
               perror("fork");
               exit(EXIT_FAILURE);
           }

           if (cpid == 0) {    /* Child reads from pipe */
               close(pipefd[1]);          /* Close unused write end */

               while (read(pipefd[0], &buf, 1) > 0)
                   write(STDOUT_FILENO, &buf, 1);

               write(STDOUT_FILENO, "\n", 1);
               close(pipefd[0]);
               _exit(EXIT_SUCCESS);

           } else {            /* Parent writes argv[1] to pipe */
               close(pipefd[0]);          /* Close unused read end */
               write(pipefd[1], argv[1], strlen(argv[1]));
               close(pipefd[1]);          /* Reader will see EOF */
               wait(NULL);                /* Wait for child */
               exit(EXIT_SUCCESS);
           }
       }

SEE ALSO
       fork(2), read(2), socketpair(2), splice(2), write(2), popen(3), pipe(7)

COLOPHON
       This  page  is  part of release 4.04 of the Linux man-pages project.  A
       description of the project, information about reporting bugs,  and  the
       latest     version     of     this    page,    can    be    found    at
       http://www.kernel.org/doc/man-pages/.

Linux                             2015-12-28                           PIPE(2)
  PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14770 pts/19   R+     0:00      \_ ps f
  PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14771 pts/19   R      0:00      \_ ./forever `
14772 pts/19   R      0:00      \_ ./forever
14773 pts/19   R+     0:00      \_ ps f
## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ PIPE(2)                    Linux Programmer's Manual                   PIPE(2)

NAME
       pipe, pipe2 - create pipe

SYNOPSIS
       #include <unistd.h>

       int pipe(int pipefd[2]);

       #define _GNU_SOURCE             /* See feature_test_macros(7) */
       #include <fcntl.h>              /* Obtain O_* constant definitions */
       #include <unistd.h>

       int pipe2(int pipefd[2], int flags);

DESCRIPTION
       pipe()  creates  a pipe, a unidirectional data channel that can be used
       for interprocess communication.  The array pipefd is used to return two
       file  descriptors  referring to the ends of the pipe.  pipefd[0] refers
       to the read end of the pipe.  pipefd[1] refers to the write end of  the
       pipe.   Data  written  to  the write end of the pipe is buffered by the
       kernel until it is read from the read end of  the  pipe.   For  further
       details, see pipe(7).

       If  flags is 0, then pipe2() is the same as pipe().  The following val‐
       ues can be bitwise ORed in flags to obtain different behavior:

       O_CLOEXEC
              Set the close-on-exec (FD_CLOEXEC) flag  on  the  two  new  file
              descriptors.   See  the  description of the same flag in open(2)
              for reasons why this may be useful.

       O_DIRECT (since Linux 3.4)
              Create a pipe that performs I/O in "packet" mode.  Each write(2)
              to  the  pipe  is  dealt with as a separate packet, and read(2)s
              from the pipe will read one packet at a time.  Note the  follow‐
              ing points:

              *  Writes  of  greater than PIPE_BUF bytes (see pipe(7)) will be
                 split  into  multiple  packets.   The  constant  PIPE_BUF  is
                 defined in <limits.h>.

              *  If a read(2) specifies a buffer size that is smaller than the
                 next packet, then the requested number of bytes are read, and
                 the  excess  bytes in the packet are discarded.  Specifying a
                 buffer size of  PIPE_BUF  will  be  sufficient  to  read  the
                 largest possible packets (see the previous point).

              *  Zero-length packets are not supported.  (A read(2) that spec‐
                 ifies a buffer size of zero is a no-op, and returns 0.)

              Older kernels that do not support this flag will  indicate  this
              via an EINVAL error.

       O_NONBLOCK
              Set  the  O_NONBLOCK  file  status flag on the two new open file
              descriptions.  Using this flag saves extra calls to fcntl(2)  to
              achieve the same result.

RETURN VALUE
       On  success,  zero is returned.  On error, -1 is returned, and errno is
       set appropriately.

ERRORS
       EFAULT pipefd is not valid.

       EINVAL (pipe2()) Invalid value in flags.

       EMFILE The per-process limit on the number of open file descriptors has
              been reached.

       ENFILE The system-wide limit on the total number of open files has been
              reached.

VERSIONS
       pipe2() was added to Linux in version 2.6.27; glibc support  is  avail‐
       able starting with version 2.9.

CONFORMING TO
       pipe(): POSIX.1-2001, POSIX.1-2008.

       pipe2() is Linux-specific.

EXAMPLE
       The  following  program  creates  a pipe, and then fork(2)s to create a
       child process; the child inherits a duplicate set of  file  descriptors
       that  refer  to  the same pipe.  After the fork(2), each process closes
       the descriptors that it doesn't need for the pipe (see  pipe(7)).   The
       parent  then  writes the string contained in the program's command-line
       argument to the pipe, and the child reads this string a byte at a  time
       from the pipe and echoes it on standard output.

   Program source
       #include <sys/types.h>
       #include <sys/wait.h>
       #include <stdio.h>
       #include <stdlib.h>
       #include <unistd.h>
       #include <string.h>

       int
       main(int argc, char *argv[])
       {
           int pipefd[2];
           pid_t cpid;
           char buf;

           if (argc != 2) {
               fprintf(stderr, "Usage: %s <string>\n", argv[0]);
               exit(EXIT_FAILURE);
           }

           if (pipe(pipefd) == -1) {
               perror("pipe");
               exit(EXIT_FAILURE);
           }

           cpid = fork();
           if (cpid == -1) {
               perror("fork");
               exit(EXIT_FAILURE);
           }

           if (cpid == 0) {    /* Child reads from pipe */
               close(pipefd[1]);          /* Close unused write end */

               while (read(pipefd[0], &buf, 1) > 0)
                   write(STDOUT_FILENO, &buf, 1);

               write(STDOUT_FILENO, "\n", 1);
               close(pipefd[0]);
               _exit(EXIT_SUCCESS);

           } else {            /* Parent writes argv[1] to pipe */
               close(pipefd[0]);          /* Close unused read end */
               write(pipefd[1], argv[1], strlen(argv[1]));
               close(pipefd[1]);          /* Reader will see EOF */
               wait(NULL);                /* Wait for child */
               exit(EXIT_SUCCESS);
           }
       }

SEE ALSO
       fork(2), read(2), socketpair(2), splice(2), write(2), popen(3), pipe(7)

COLOPHON
       This  page  is  part of release 4.04 of the Linux man-pages project.  A
       description of the project, information about reporting bugs,  and  the
       latest     version     of     this    page,    can    be    found    at
       http://www.kernel.org/doc/man-pages/.

Linux                             2015-12-28                           PIPE(2)
  PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14771 pts/19   R      0:00      \_ ./forever `
14772 pts/19   R      0:00      \_ ./forever
14793 pts/19   R+     0:00      \_ ps f
  PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14771 pts/19   R      0:00      \_ ./forever `
14772 pts/19   R      0:00      \_ ./forever
14794 pts/19   R      0:00      \_ ./forever ??m
14795 pts/19   R      0:00      \_ ./forever
14796 pts/19   R+     0:00      \_ ps f
## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $   PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14771 pts/19   R      0:00      \_ ./forever `
14772 pts/19   R      0:00      \_ ./forever
14794 pts/19   R      0:00      \_ ./forever ??m
14795 pts/19   R      0:00      \_ ./forever
14798 pts/19   R+     0:00      \_ ps f
  PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14771 pts/19   R      0:00      \_ ./forever `
14772 pts/19   R      0:00      \_ ./forever
14794 pts/19   R      0:00      \_ ./forever ??m
14795 pts/19   R      0:00      \_ ./forever
14799 pts/19   R      0:00      \_ ./forever ??m
14800 pts/19   R      0:00      \_ ./forever
14801 pts/19   R+     0:00      \_ ps f
## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $   PID TTY      STAT   TIME COMMAND
14717 pts/19   Ss     0:00 bash
14743 pts/19   S+     0:00  \_ ./myshell.o
14771 pts/19   R      0:00      \_ ./forever `
14772 pts/19   R      0:00      \_ ./forever
14794 pts/19   R      0:00      \_ ./forever ??m
14795 pts/19   R      0:00      \_ ./forever
14799 pts/19   R      0:00      \_ ./forever ??m
14800 pts/19   R      0:00      \_ ./forever
14803 pts/19   R      0:00      \_ ./forever
14804 pts/19   R      0:00      \_ ./forever
14805 pts/19   R+     0:00      \_ ps f
## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ ## myshell $ 